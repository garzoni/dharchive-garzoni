<?php

return [
    'date'                      => [
        'after'                 => '{attribute} must be a date after {date}.',
        'after_or_equal_to'     => '{attribute} must be a date after or equal to {date}.',
        'before'                => '{attribute} must be a date before {date}.',
        'before_or_equal_to'    => '{attribute} must be a date before or equal to {date}.',
        'equal_to'              => '{attribute} must be a date equal to {date}.',
        'format'                => '{attribute} does not match the format {format}.',
        'not_equal_to'          => '{attribute} must be a date not equal to {date}.',
    ],
    'default'                   => '{attribute} is not valid.',
    'empty'                     => '{attribute} must be empty.',
    'equal_to'                  => '{attribute} must be equal to {value}.',
    'false'                     => '{attribute} must be false.',
    'greater_than'              => '{attribute} must be greater than {value}.',
    'greater_than_or_equal_to'  => '{attribute} must be greater than or equal to {value}.',
    'identical_to'              => '{attribute} must be identical to {value}.',
    'integer'                   => [
        'digit_count'   => [
            'between'   => '{attribute} must have between {min} and {max} digits.',
            'equal_to'  => '{attribute} must have {digits} digits.',
            'max'       => '{attribute} must have at most {max} digits.',
            'min'       => '{attribute} must have at least {min} digits.',
        ],
    ],
    'less_than'                 => '{attribute} must be less than {value}.',
    'less_than_or_equal_to'     => '{attribute} must be less than or equal to {value}.',
    'not_empty'                 => '{attribute} must not be empty.',
    'not_equal_to'              => '{attribute} must not be equal to {value}.',
    'not_identical_to'          => '{attribute} must not be identical to {value}.',
    'not_null'                  => '{attribute} must not be null.',
    'null'                      => '{attribute} must be null.',
    'range'                     => '{attribute} must be between {min} and {max}.',
    'regex'                     => '{attribute} format is invalid.',
    'required'                  => '{attribute} field is required.',
    'string'                    => [
        'accepted'              => '{attribute} must be accepted.',
        'after'                 => '{attribute} must be a string after {text}.',
        'after_or_equal_to'     => '{attribute} must be a string after or equal to {text}.',
        'before'                => '{attribute} must be a string before {text}.',
        'before_or_equal_to'    => '{attribute} must be a string before or equal to {text}.',
        'byte_length'           => [
            'between'   => '{attribute} must be between {min} and {max} bytes long.',
            'equal_to'  => '{attribute} must be {bytes} bytes long.',
            'max'       => '{attribute} must be at most {max} bytes long.',
            'min'       => '{attribute} must be at least {min} bytes long.',
        ],
        'contains'              => '{attribute} must contain {text}.',
        'declined'              => '{attribute} must be declined.',
        'ends_with'             => '{attribute} must end with {text}.',
        'equal_to'              => '{attribute} must be a string equal to {text}.',
        'format'                => [
            'alpha'         => '{attribute} may only contain letters.',
            'alpha_numeric' => '{attribute} may only contain letters and numbers.',
            'ascii'         => '{attribute} may only contain ASCII characters.',
            'base64'        => '',
            'date'          => '{attribute} must be a valid date.',
            'email'         => '{attribute} must be a valid email address.',
            'hex'           => '{attribute} may only contain hexadecimal characters.',
            'ip_address'    => '{attribute} must be a valid IP address.',
            'json'          => '{attribute} must be a valid JSON string.',
            'mac_address'   => '{attribute} must be a valid MAC address.',
            'slug'          => '{attribute} must be a valid slug.',
            'timezone'      => '{attribute} must be a valid time zone.',
            'url'           => '{attribute} must be a valid URL.',
            'uuid'          => '{attribute} must be a valid UUID.',
        ],
        'length'                => [
            'between'   => '{attribute} must have between {min} and {max} characters.',
            'equal_to'  => '{attribute} must have {chars} characters.',
            'max'       => '{attribute} must have at most {max} characters.',
            'min'       => '{attribute} must have at least {min} characters.',
        ],
        'not_equal_to'          => '{attribute} must be a string not equal to {text}.',
        'starts_with'           => '{attribute} must start with {text}.',
    ],
    'true'                      => '{attribute} must be true.',
    'type'                      => [
        'array'     => '{attribute} must be an array.',
        'boolean'   => '{attribute} must be a boolean value.',
        'callable'  => '{attribute} must be a callback function.',
        'date'      => '{attribute} must be a date.',
        'default'   => '{attribute} has a wrong type.',
        'double'    => '{attribute} must be a floating-point number.',
        'integer'   => '{attribute} must be an integer.',
        'null'      => '{attribute} must be null.',
        'numeric'   => '{attribute} must be a number.',
        'object'    => '{attribute} must be an object.',
        'resource'  => '{attribute} must be a resource.',
        'scalar'    => '{attribute} must be a scalar.',
        'string'    => '{attribute} must be a string.',
    ],
];

// -- End of file
